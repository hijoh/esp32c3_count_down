/*
void store_flag(){
    // 打开NVS
    nvs_handle_t my_handle;
    esp_err_t err;
    err = nvs_open("storage1", NVS_READWRITE, &my_handle);
    if (err != ESP_OK)
    {
        printf("Error (%s) opening NVS handle!\n", esp_err_to_name(err));
    }
    else
    {
        // 存储 lock_status 的布尔值
        uint8_t lock_status_value = 1; // 将布尔值转换为 0 或 1
        err = nvs_set_u8(my_handle, "lock_status", lock_status_value);
        if (err != ESP_OK)
        {
            printf("Error (%s) writing NVS lock_status!\n", esp_err_to_name(err));
        }
        else
        {
            // 提交更改
            nvs_commit(my_handle);
        }

        // 关闭NVS
        nvs_close(my_handle);
    }
}

void machine_status()
{
    nvs_handle_t my_handle;
    esp_err_t err;

    // 打开NVS
    err = nvs_open("storage1", NVS_READWRITE, &my_handle);
    if (err != ESP_OK)
    {
        printf("Error (%s) opening NVS handle!\n", esp_err_to_name(err));
    }
    else
    {
        // 从NVS读取target_rec
        err = nvs_get_u8(my_handle, "lock_status", &lock_status);
        if (err != ESP_OK)
        {
            printf("Error (%s) reading NVS target_rec!\n", esp_err_to_name(err));
        }
        else
        {
    while (1)
    {
        if (lock_status == 1){
            led_status();
        }
        else{
            led_off();
        }
        vTaskDelay(100 / portTICK_PERIOD_MS);
    }        }

        // 关闭NVS
        nvs_close(my_handle);
    }
vTaskDelay(50/ portTICK_PERIOD_MS); // Delay for a second

}
*/